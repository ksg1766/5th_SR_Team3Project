#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	enum WINMODE			{ MODE_FULL, MODE_WIN };

	// Dynamic 컴포넌트 경우 매 프레임마다 갱신해야하는 컴포넌트 집단
	enum COMPONENTID		{ ID_DYNAMIC, ID_STATIC, ID_END };

	enum INFO				{ INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION			{ ROT_X, ROT_Y, ROT_Z, ROT_END };

	enum TEXTUREID			{ TEX_NORMAL, TEX_CUBE, TEX_END };

	enum RENDERID			{ RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_EFFECT, RENDER_UI, RENDER_END };

	enum MOUSEKEYSTATE		{ DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum MOUSEMOVESTATE		{ DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	enum class CAMERA_TYPE	{ PERSPECTIVE, ORTHOGRAPHIC, CAMERA_END};
	enum class LIGHT_TYPE	{ LIGHT_DIRECTIONAL, LIGHT_POINT, LIGHT_SPOT, LIGHT_END };

	enum class EVENT_TYPE	{ CREATE_OBJECT, DELETE_OBJECT, SCENE_CHANGE, EVENT_END };

	enum class LAYERTAG		{ EVERYTHING, ENVIRONMENT, GAMELOGIC, EFFECT, UI, IGNORERAY, LAYER_END };
	//enum class LAYERTAG	{ EVERYTHING, ENVIRONMENT, DYNAMIC_GAMEOBJECT, STATIC_GAMEOBJECT, EFFECT, UI, IGNORERAY, LAYER_END };
	enum class OBJECTTAG	{ BACKGROUND, TERRAIN, BLOCK, PLAYER, ITEM, MONSTER, BOSS, PROJECTTILE, CAMERA, UI, SKYBOX, OBJECT_END };
	enum class ITEMTAG		{ WEAPON, ARMOR, WANDS, POTION, SHIELD, ACCESSORY, CONSUMABLE, GEM, ARTIFACT, ITEM_END };
	enum class COMPONENTTAG	{ BUFFER, TEXTURE0, TEXTURE1, TRANSFORM, COLLIDER, RIGIDBODY, LIGHT, CAMERA, BASICSTAT, MONSTERAI,
								ANIMATOR, PARTICLE, BILLBOARD, STATEMACHINE, COMPONENT_END };
	
	// STATE
	enum class STATE { IDLE, ROMIMG, ATTACK, HIT, DEAD, 
		BOSS_SLEEP, BOSS_WAKEUP, BOSS_IDLE, BOSS_STURN, BOSS_ATTACK, BOSS_FIRE, BOSS_EXPLOSION, BOSS_TELEPORT,
		BOSS_METEORREADY,BOSS_CRAWL
		, BOSS_DYING, BOSS_DEAD ,STATE_END };
	enum class MONSTERTAG	{ SPIDER, WARRIOR, BAT, MONSTER_END };

	enum UILAYER            { UI_DOWN, UI_MIDDLE, UI_UP, UI_END };
	enum UIPOPUPLAYER       { POPUP_MOUSE, POPUP_INVEN, POPUP_EQUIPMENT, POPUP_STAT, POPUP_MAP, POPUP_ESC, POPUP_END };
	enum UIOBJECTTTAG       { UIID_BASIC, UIID_SLOTBASIC, UIID_SLOTEMPTY, UIID_SLOTEQUIPMENT, UIID_INVENBUTTON, UIID_END };

	enum INVENKEYSLOT       { KEYSLOT_ONE, KEYSLOT_TWO, KEYSLOT_THREE, KEYSLOT_FOUR, KEYSLOT_FIVE, KEYSLOT_END };
	enum INVENITEMSLOT      { ITEMSLOT_HELMET, ITEMSLOT_ARMOR, ITEMSLOT_PANTS, ITEMSLOT_HAND, ITEMSLOT_RING, ITEMSLOT_NECKLACE, ITEMSLOT_END };
	
	// 아이템 아이디 일단 다 추가해 둘 테니 중요한 순서대로 만들어 주십쇼 :D
	enum ITEMTYPE           { ITEMTYPE_WEAPONITEM, ITEMTYPE_GENERALITEM, ITEMTYPE_EQUIPITEM, ITEMTYPE_EATITEM, ITEMTYPE_POTIONITEM, ITEMTYPE_END};
	
	enum ITEMID             { WEAPON_SWORD,                                    // 근접 무기 칼
		WEAPON_BOW, WEAPON_ARROW, WEAPON_BOWANDARROW,                          // 원거리 무기 활, 화살, 활과 화살
		WEAPON_WAND1, WEAPON_WAND2, WEAPON_WAND3, WEAPON_WAND4, WEAPON_WAND5,  // 지팡이 무기 5가지

		GENERAL_LAMP, GENERAL_BEER, GENERAL_KET, GENERAL_DOCUMENT, GENERAL_MAP,// 일반 아이템 램프, 맥주, 

		EQUIP_OLDHELMET, EQUIP_OLDARMOR, EQUIP_OLDTROUSERS,
		EQUIP_IRONHELMET, EQUIP_IRONARMOR, EQUIP_IRONTROUSERS,
		EQUIP_SMALLSILVERRING, EQUIP_BIGSILVERRING, EQUIP_SILVERNECKLACE,
		EQUIP_SMALLGOLDRING, EQUIP_BIGGOLDRING, EQUIP_GOLDNECKLACE,

		EAT_
	};
};
#endif // Engine_Enum_h__
